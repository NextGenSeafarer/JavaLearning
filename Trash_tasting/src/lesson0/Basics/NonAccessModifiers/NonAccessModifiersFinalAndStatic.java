package lesson0.Basics.NonAccessModifiers;

public class NonAccessModifiersFinalAndStatic {
    /*

    К non access modifiers относятся модификаторы такие как:
    final, static, abstract


    final - делает из поля (перемененной) - константу, а для класса - запрещает менять ссылку, т.е. после создания
    объекта сослаться на другой объект уже не получится
    Константу необходимо задавать либо сразу же, либо в конструкторах (если она не static)

    Вся логика в том, что если переменная не static - тогда нам 100% надо создавать объект для работы с ней, поэтому если
    она всё же не будет инициализирована сразу, то можно это сделать сразу при создании конструктора, тогда это будет работать.



    Слово static - делает переменную или метод - Class instance (т.е. с доступом по классу, без создания объекта),
    у Object instance для использования было необходимо создавать экземпляр класса (Объект) для использования.
    Static переменные и методы могут обращаться только к таким же static переменным и методам, т.к. они существуют и могут быть
    использованы без создания объектов,
    при этом non-static элементы могут обращаться к static.
    Обращение к static элементам производится по типу Class.staticMethod();



    */

    final float pi = 3.14F; // <- это константа
    final int number; // <- ошибка, т.к. нужно сразу инициализировать final, либо добавлять в конструкторы, где инициализировать

    NonAccessModifiersFinalAndStatic() { // <- используем конструктор с пустым телом и без параметров, в нем определим константу
        number = 1;
    }
    NonAccessModifiersFinalAndStatic(boolean a) { // <- используем конструктор с параметром, в нем определим константу
        number = 10; // <- константы могут быть разными для разных конструкторов!
    }

    public static void main(String[] args) {
        NonAccessModifiersFinalAndStatic modifiers = new NonAccessModifiersFinalAndStatic();
        // modifiers.pi = modifiers.pi * 2; <- ошибка, константа не может быть изменена

    }


}
