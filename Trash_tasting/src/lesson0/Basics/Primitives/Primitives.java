package lesson0.Basics.Primitives;

public class Primitives {


    /*

    Существует 8 примитивных типов данных в Java:

                Размер      Диапазон
    byte        8 бит       [-128,127]
    |
    short       16 бит      [-32768,32767]
    |
    int         32 бит      [-2147483648,2147483647] <- стандартный тип данных для целочисленных значений
    |
    long        64 бит      [-9223372036854775808,9223372036854775807]
    |
    float       32 бит      [3.4e-38,3.4e+38]
    |
    double      64 бит      [1.7e-308,1.7e+308] <- стандартный тип для дробных чисел
    |
    char        16 бит      [0,65535]
    |
    boolean     не опр.     {true,false}

    Интересные факты:

    При делении целочисленных значений на ноль будет выбрасываться Exception /by zero (деление на ноль)
    НО ПРИ ДЕЛЕНИИ ЧИСЕЛ С ДРОБНОЙ ЧАСТЬЮ и float и double -> будет возвращаться Infinity






    */
    public static void main(String[] args) {

        // так как стандартным типом данных в java является int для целочисленных и
        // double для дробных - необходимо явно указывать, что число принадлежит к Long или Float (L || F)


        long a = 3_000_000_000L;
        //long b = 3_000_000_000;  // ошибка из - за того, что число справа - распознается как стандартное int

        float c = 3.14F;
        //float d = 3.14; // распознается как double

        double e = 3.13;

        // представление чисел в других системах счисления:

        int o1 = 0x344F; // шестнадцатеричная система (0 - F)
        int o2 = 0b1001; // двоичная (диапазон 0 - 1)
        int o3 = 057; // восьмеричная ( диапазон 0 - 7 )

        // запись char:

        char c1 = 'a';
        char c2 = '\u1000'; // юникод, всегда 4 цифры после \\u
        char c3 = 500; // числовое представление ( вернет символ под номером 500 из юникода)

        System.out.println("c1: " + c1 + "\nc2: " + c2 + "\nc3: " + c3);

        boolean tr = true;
        boolean fl = false;


    }
}
